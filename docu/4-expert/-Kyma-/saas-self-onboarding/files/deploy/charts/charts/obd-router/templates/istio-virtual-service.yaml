{{ if .Values.expose.enabled}}
{{- $onboardingHost := printf "%s.%s.svc.cluster.local" ( default ( printf "%s-%s" .Release.Name "router" ) .Values.global.router.fullName ) .Release.Namespace -}}
{{- $applicationHost := printf "%s.%s.svc.cluster.local" ( printf "%s-%s" ( default "susaas" .Values.global.saasRelease ) (default "router" .Values.global.saasRouter)) .Release.Namespace -}}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ printf "%s-%s" ( default "susaas" .Values.global.saasRelease ) ( uuidv4 | trunc 5) }}
  labels: {{- include "obd-router.labels" . | nindent 4 }}
spec:
  gateways:
    - {{ .Values.global.gateway | default "kyma-system/kyma-gateway"  }}
  hosts:
    # Application domain like susaas.sap-demo.com
    - {{ printf "%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
    # Onboarding domain like onboarding-susaas.sap-demo.com
    - {{ printf "onboarding-%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
  http:

    # Handler for the onboarding application ensuring a domain switch
    # Login and cookies have to be handled on the Onboarding application domain
    - match:
      - uri:
          regex: ^.*(uionboarding).*$
        authority:
          exact: {{ printf "%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
      redirect:
        authority: {{ printf "onboarding-%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
    
    # Handler for the gateway service calls ensuring a domain switch
    # Login and cookies have to be handled on the SaaS application domain
    - match:
      - uri:
          regex: ^.*(gateway).*$
        authority:
          exact: {{ printf "onboarding-%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
      redirect:
        authority: {{ printf "%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}

    # Handler for the gateway service calls containing the x-custom-host already!
    - match:
        - headers:
            Cookie:
              regex: ^.*(?:x-custom-host=).*$
          uri:
            regex: ^.*(?:gateway).*$
          authority:
            exact: {{ printf "%s-%s.%s" ( default "susaas" .Values.global.saasRelease ) .Release.Namespace .Values.global.domain }}
      rewrite:
        uri: /
      route:
        - destination:
            host: susaas-prod-router.susaas.svc.cluster.local
            port:
              number: 5000
          weight: 100
      timeout: 30s

    # Handler for all requests targeting the onboarding router/apps
    - match:
      - uri:
          regex: ^.*(gateway|uionboarding|uihome).*$
      - headers:
          Cookie:
            regex: ^.*locationAfterLogin=.*(?:gateway|uionboarding).*$
        uri:
            prefix: /login
      route:
        - destination:
            host: {{ $onboardingHost }}  
            port:
              number: 5000
          weight: 100
      timeout: 30s
    
    # Handler for all requests targeting the mulitenant SaaS application
    # Requests require the x-custom-host cookie to determine the tenant host
    - match:
      - uri:
          regex: ^.*(uipublic|uiadmin|user-api|login).*$
        headers:
          Cookie:
            regex: ^.*(x-custom-host=).*$
      route:
        # Route targeting the mulitenant SaaS application router 
        - destination:
            host: {{ $applicationHost }} 
            port:
              number: 5000
          weight: 100
      timeout: 30s

    # Handler for all other requests
    - match:
      - uri:
          regex: .*
      rewrite:
        uri: /
      route:
        - destination:
            host: {{ $onboardingHost }}  
            port:
              number: 5000
          weight: 100
      timeout: 30s
{{ end }}